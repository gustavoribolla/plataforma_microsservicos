name: store

services:
  db:
    image: postgres:latest
    hostname: db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-store}
      POSTGRES_USER: ${POSTGRES_USER:-store}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-store}
    volumes:
      - $VOLUME/postgres/store:/var/lib/postgresql/data

  account:
    hostname: account
    build:
      context: ./account-service
      dockerfile: Dockerfile
    environment:
      DATABASE_HOST: db
      DATABASE_USER: ${POSTGRES_USER:-store}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD:-store}

  auth:
    hostname: auth
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    environment:
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-yrBBgYlvJQeslzFlgX9MFZccToI2fjRFqualquercoisa}

  gateway:
    hostname: gateway
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    environment:
      - LOGGING_LEVEL_STORE=${LOGGING_LEVEL_STORE:-debug}
    ports:
      - 8080:8080

  product:
    hostname: product
    build:
      context: ./product-service
      dockerfile: Dockerfile
    environment:
      DATABASE_HOST: db
      DATABASE_USER: ${POSTGRES_USER:-store}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD:-store}

  order:
    hostname: order
    build:
      context: ./order-service
      dockerfile: Dockerfile
    environment:
      DATABASE_HOST: db
      DATABASE_USER: ${POSTGRES_USER:-store}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD:-store}

  prometheus:
    image: prom/prometheus:latest
    hostname: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - product
      - order

  grafana:
    image: grafana/grafana-enterprise
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - $VOLUME/grafana:/var/lib/grafana
      - $VOLUME/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus